
var inherits = require('util').inherits;
var Writable = require('stream').Writable;
var Schema   = require('./schema');


function Decoder(schema) {
  Writable.call(this);

  if (typeof schema !== 'object' || typeof schema.length !== 'number') {
    throw new Error('schema must be an array');
  }

  this.data       = null;
  this.isResolved = false;
  this._schema    = new Schema(schema);
  this._buffer    = null;
}
inherits(Decoder, Writable);

Decoder.prototype._write = function(chunk, encoding, cb) {
  this._buffer = this._buffer ? Buffer.concat([this._buffer, chunk]) : chunk;

  if (this._schema.decode(this._buffer, 0)) {
    this.data       = this._schema.data;
    this.isResolved = this._schema.isResolved;
  }

  cb(null);
};


module.exports = Decoder;
